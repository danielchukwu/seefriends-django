# Generated by Django 4.0.4 on 2022-06-19 20:51

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Post',
            fields=[
                ('img', models.ImageField(blank=True, null=True, upload_to='contents/')),
                ('body', models.TextField()),
                ('tellers_count', models.PositiveSmallIntegerField(default=0)),
                ('sharers_count', models.PositiveSmallIntegerField(default=0)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('commenters', models.ManyToManyField(blank=True, related_name='post_commenters', to=settings.AUTH_USER_MODEL)),
                ('likers', models.ManyToManyField(blank=True, related_name='post_likers', to=settings.AUTH_USER_MODEL)),
                ('owner', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('savers', models.ManyToManyField(blank=True, related_name='post_savers', to=settings.AUTH_USER_MODEL)),
                ('sharers', models.ManyToManyField(blank=True, related_name='sharers_post', to=settings.AUTH_USER_MODEL)),
                ('tellers', models.ManyToManyField(blank=True, related_name='tellers_post', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created'],
            },
        ),
        migrations.CreateModel(
            name='Tell',
            fields=[
                ('body', models.TextField()),
                ('type', models.CharField(default='', max_length=20)),
                ('tellers_count', models.PositiveSmallIntegerField(default=0)),
                ('sharers_count', models.PositiveSmallIntegerField(default=0)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('likers', models.ManyToManyField(blank=True, related_name='likers', to=settings.AUTH_USER_MODEL)),
                ('owner', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('savers', models.ManyToManyField(blank=True, related_name='tell_savers', to=settings.AUTH_USER_MODEL)),
                ('sharers', models.ManyToManyField(blank=True, related_name='sharers_tell', to=settings.AUTH_USER_MODEL)),
                ('tell_on_post', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='homeapp.post')),
                ('tell_on_tell', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='tell_on_tell_now', to='homeapp.tell')),
                ('tellers', models.ManyToManyField(blank=True, related_name='tellers_tell', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created', '-updated'],
            },
        ),
        migrations.CreateModel(
            name='Search',
            fields=[
                ('updated', models.DateTimeField(auto_now=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='search_user', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'Search',
                'ordering': ['-updated'],
            },
        ),
        migrations.CreateModel(
            name='PostFeed',
            fields=[
                ('updated', models.DateTimeField(auto_now=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('owner', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('post', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='homeapp.post')),
                ('post_owner', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='p_owner', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'PostFeed',
                'ordering': ['-created'],
            },
        ),
        migrations.CreateModel(
            name='CommentOnTell',
            fields=[
                ('comment', models.CharField(max_length=200)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('owner', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('tell', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='homeapp.tell')),
            ],
            options={
                'ordering': ['-created', '-updated'],
            },
        ),
        migrations.CreateModel(
            name='CommentOnPost',
            fields=[
                ('comment', models.CharField(max_length=2000)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('owner', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('post', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='homeapp.post')),
            ],
            options={
                'ordering': ['-created', '-updated'],
            },
        ),
        migrations.CreateModel(
            name='Activity',
            fields=[
                ('activity_type', models.CharField(blank=True, max_length=200, null=True)),
                ('updated', models.DateTimeField(auto_now_add=True)),
                ('created', models.DateTimeField(auto_now=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('comment_post', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='post_comment', to='homeapp.commentonpost')),
                ('comment_tell', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='tell_comment', to='homeapp.commentontell')),
                ('liker_post', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='post_liker', to=settings.AUTH_USER_MODEL)),
                ('liker_tell', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='tell_liker', to=settings.AUTH_USER_MODEL)),
                ('owner', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('post', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='post', to='homeapp.post')),
                ('tell', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='tell', to='homeapp.tell')),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='user', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created'],
            },
        ),
        migrations.CreateModel(
            name='SaveTell',
            fields=[
                ('updated', models.DateTimeField(auto_now_add=True)),
                ('created', models.DateTimeField(auto_now=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('owner', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('tell', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='homeapp.tell')),
            ],
            options={
                'unique_together': {('owner', 'tell')},
            },
        ),
        migrations.CreateModel(
            name='SavePost',
            fields=[
                ('updated', models.DateTimeField(auto_now_add=True)),
                ('created', models.DateTimeField(auto_now=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('owner', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('post', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='homeapp.post')),
            ],
            options={
                'unique_together': {('owner', 'post')},
            },
        ),
    ]
